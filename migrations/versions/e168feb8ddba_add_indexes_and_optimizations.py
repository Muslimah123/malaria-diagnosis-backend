"""Add indexes and optimizations

Revision ID: e168feb8ddba
Revises: 2d9ac5a5c592
Create Date: 2024-10-06 12:09:45.155557

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e168feb8ddba'
down_revision = '2d9ac5a5c592'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('archived_images')
    op.drop_table('archived_visits')
    op.drop_table('archived_diagnosis_results')
    with op.batch_alter_table('backup_codes', schema=None) as batch_op:
        batch_op.create_index('idx_backup_code_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('chats', schema=None) as batch_op:
        batch_op.create_index('idx_chat_last_message_time', ['last_message_time'], unique=False)
        batch_op.create_index('idx_chat_participant_id', ['participant_id'], unique=False)
        batch_op.create_index('idx_chat_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('diagnosis_results', schema=None) as batch_op:
        batch_op.create_index('idx_diagnosis_image_id', ['image_id'], unique=False)
        batch_op.create_index('idx_diagnosis_result_date', ['result_date'], unique=False)
        batch_op.create_index('idx_diagnosis_status', ['status'], unique=False)
        batch_op.create_index('idx_diagnosis_visit_id', ['visit_id'], unique=False)

    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.create_index('idx_image_processing_status', ['processing_status'], unique=False)
        batch_op.create_index('idx_image_upload_date', ['upload_date'], unique=False)
        batch_op.create_index('idx_image_visit_id', ['visit_id'], unique=False)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index('idx_message_chat_id', ['chat_id'], unique=False)
        batch_op.create_index('idx_message_sender_id', ['sender_id'], unique=False)
        batch_op.create_index('idx_message_timestamp', ['timestamp'], unique=False)

    with op.batch_alter_table('metadata', schema=None) as batch_op:
        batch_op.create_index('idx_metadata_entity', ['entity_id', 'entity_type'], unique=False)
        batch_op.create_index('idx_metadata_key', ['key'], unique=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('idx_notification_read', ['read'], unique=False)
        batch_op.create_index('idx_notification_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('search_vector', postgresql.TSVECTOR(), nullable=True))
        batch_op.create_index('idx_patient_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_patient_email', ['email'], unique=False)
        batch_op.create_index('idx_patient_name', ['name'], unique=False)
        batch_op.create_index('idx_patient_search_vector', ['search_vector'], unique=False, postgresql_using='gin')
        batch_op.create_unique_constraint('unique_patient_id', ['patient_id'])

    with op.batch_alter_table('remembered_devices', schema=None) as batch_op:
        batch_op.create_index('idx_remembered_device_token', ['token'], unique=False)
        batch_op.create_index('idx_remembered_device_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_email', ['email'], unique=False)
        batch_op.create_index('idx_user_google_id', ['google_id'], unique=False)
        batch_op.create_index('idx_user_role', ['role'], unique=False)

    with op.batch_alter_table('visits', schema=None) as batch_op:
        batch_op.create_index('idx_visit_date', ['visit_date'], unique=False)
        batch_op.create_index('idx_visit_patient_id', ['patient_id'], unique=False)
        batch_op.create_index('idx_visit_status', ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('visits', schema=None) as batch_op:
        batch_op.drop_index('idx_visit_status')
        batch_op.drop_index('idx_visit_patient_id')
        batch_op.drop_index('idx_visit_date')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_user_role')
        batch_op.drop_index('idx_user_google_id')
        batch_op.drop_index('idx_user_email')

    with op.batch_alter_table('remembered_devices', schema=None) as batch_op:
        batch_op.drop_index('idx_remembered_device_user_id')
        batch_op.drop_index('idx_remembered_device_token')

    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.drop_constraint('unique_patient_id', type_='unique')
        batch_op.drop_index('idx_patient_search_vector', postgresql_using='gin')
        batch_op.drop_index('idx_patient_name')
        batch_op.drop_index('idx_patient_email')
        batch_op.drop_index('idx_patient_created_at')
        batch_op.drop_column('search_vector')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('idx_notification_user_id')
        batch_op.drop_index('idx_notification_read')

    with op.batch_alter_table('metadata', schema=None) as batch_op:
        batch_op.drop_index('idx_metadata_key')
        batch_op.drop_index('idx_metadata_entity')

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index('idx_message_timestamp')
        batch_op.drop_index('idx_message_sender_id')
        batch_op.drop_index('idx_message_chat_id')

    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.drop_index('idx_image_visit_id')
        batch_op.drop_index('idx_image_upload_date')
        batch_op.drop_index('idx_image_processing_status')

    with op.batch_alter_table('diagnosis_results', schema=None) as batch_op:
        batch_op.drop_index('idx_diagnosis_visit_id')
        batch_op.drop_index('idx_diagnosis_status')
        batch_op.drop_index('idx_diagnosis_result_date')
        batch_op.drop_index('idx_diagnosis_image_id')

    with op.batch_alter_table('chats', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_user_id')
        batch_op.drop_index('idx_chat_participant_id')
        batch_op.drop_index('idx_chat_last_message_time')

    with op.batch_alter_table('backup_codes', schema=None) as batch_op:
        batch_op.drop_index('idx_backup_code_user_id')

    op.create_table('archived_diagnosis_results',
    sa.Column('result_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('visit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parasite_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('average_confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('severity_level', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('positive', 'negative', 'inconclusive', name='result_status'), autoincrement=False, nullable=True),
    sa.Column('result_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('parasite_density', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_wbcs', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wbc_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('result_id', name='archived_diagnosis_results_pkey')
    )
    op.create_table('archived_visits',
    sa.Column('visit_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('visit_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('symptoms', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'in_progress', 'completed', name='visit_status'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('visit_id', name='archived_visits_pkey')
    )
    op.create_table('archived_images',
    sa.Column('image_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('visit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('smear_type', postgresql.ENUM('thick', 'thin', name='smear_types'), autoincrement=False, nullable=False),
    sa.Column('test_type', postgresql.ENUM('Giemsa', 'Wright', 'Field', name='test_types'), autoincrement=False, nullable=False),
    sa.Column('processing_status', postgresql.ENUM('queued', 'processing', 'completed', 'failed', name='processing_status'), autoincrement=False, nullable=True),
    sa.Column('upload_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('image_id', name='archived_images_pkey')
    )
    # ### end Alembic commands ###
